# encoding: utf-8
require 'serverspec'

include Serverspec::Helper::Exec
include Serverspec::Helper::DetectOS
RSpec.configure do |c|
  c.before :all do
    c.path = '/usr/bin'
  end
end
describe file('/etc/ssh/sshd_config') do
  it { should be_file }
  it { should be_mode 644 }
  it { should be_owned_by 'root' }
  it { should be_grouped_into 'root' }
  its(:content) { should match '^# This file was generated by Chef for*.+$' }
  its(:content) { should match '^# Do NOT modify this file by hand!$' }
  its(:content) { should match '^ChallengeResponseAuthentication yes$' }
  its(:content) { should match '^UsePAM yes$' }
  its(:content) { should match '^PasswordAuthentication yes$' }
end
if os[:family] == 'Debian'
  describe file('/etc/apt/sources.list.d/yubico-stable-precise.list') do
    it { should be_file }
    it { should be_mode 644 }
    it { should be_owned_by 'root' }
    it { should be_grouped_into 'root' }
    m = 'deb http://ppa.launchpad.net/yubico/stable/ubuntu precise main'
    its(:content) { should match m }
    m = 'deb-src http://ppa.launchpad.net/yubico/stable/ubuntu precise main'
    its(:content) { should match m }
  end
elsif os[:family] == 'RedHat'
  describe file('/etc/pam.d/sshd') do
    it { should be_file }
    it { should be_mode 600 }
    it { should be_owned_by 'root' }
    it { should be_grouped_into 'root' }
    m = 'auth required pam_yubico.so mode=client try_first_pass authfile=/etc/yubikey_mappings debug'
    its(:content) { should match m }
    m = 'auth  required  pam_sepermit.so'
    its(:content) { should match m }
    m = 'auth include  password-auth'
    its(:content) { should match m }
    m = 'account    required     pam_nologin.so'
    its(:content) { should match m }
    m = 'account    include  password-auth'
    its(:content) { should match m }
    m = 'password  include password-auth'
    its(:content) { should match m }
    m = 'session required  pam_selinux.so close'
    its(:content) { should match m }
    m = 'session required  pam_loginuid.so'
    its(:content) { should match m }
    m = 'session required  pam_selinux.so open env_params'
    its(:content) { should match m }
    m = 'session optional  pam_keyinit.so  force revoke'
    its(:content) { should match m }
    m = 'session include   password-auth'
    its(:content) { should match m }
  end
end
describe package('libpam-yubico') do
  it { should be_installed }
end
